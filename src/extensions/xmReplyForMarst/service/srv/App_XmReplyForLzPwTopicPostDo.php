<?php
defined('WEKIT_VERSION') or exit(403);
Wind::import('SRV:forum.srv.post.do.PwPostDoBase');

/**
 * 发表帖子
 *
 * @author 蝦米 <>
 * @copyright
 * @license
 */
class App_XmReplyForLzPwTopicPostDo extends PwPostDoBase
{
    /*
     * @see PwPostDoBase
    */

    protected $tid;
    protected $action;

    public function __construct(PwPost $pwpost, $tid = null)
    {
        $this->tid = $tid ? intval($tid) : null;
        $this->action = $this->tid ? 'modify' : 'add';
    }

    /**
     * 帖子发布前，数据检查
     *
     * @param PwPostDm $postDm
     * @return true|PwError
     */
    public function check($postDm)
    {
        return parent::check($postDm); // TODO: Change the autogenerated stub
    }

    /**
     * 帖子发布页，正文右侧内容显示(模板扩展) <output内容输出>
     */
    public function createHtmlRightContent()
    {
        if (!$this->_getConfigService()->getConfigByCurrentUser()) {
            return false;
        } else {
            PwHook::template('HtmlRightContent', 'EXT:xmReplyForLz.template.hook_run', true, $this);
        }
    }

    /**
     * 帖子发布成功后调用
     *
     * @param int $tid
     */
    public function addThread($tid)
    {
        $this->_updateThread($tid);
    }

    /**
     * 帖子更新成功后调用
     *
     * @param int $tid
     */
    public function updateThread($tid)
    {
        $this->_updateThread($tid);
    }

    private function _updateThread($tid)
    {
        $useReplyForLz = $this->_getConfigService()->getConfigByCurrentUser() && intval($_REQUEST['useReplyForLz']);
        $this->_loadDao()->update($tid, array('use_reply_for_lz' => intval($useReplyForLz)));
    }

    private function _getConfigService()
    {
        return Wekit::load('EXT:xmReplyForLz.service.srv.App_XmReplyForLz_ConfigDo');
    }

    private function _loadDao()
    {
        return Wekit::loadDao('EXT:xmReplyForLz.service.dao.App_XmReplyForLz_CommonDao');
    }
}